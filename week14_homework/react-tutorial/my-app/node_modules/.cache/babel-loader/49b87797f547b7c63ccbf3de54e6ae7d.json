{"ast":null,"code":"var _jsxFileName = \"E:\\\\DocumenteB\\\\SIIT_Scoala_Informala_de_IT\\\\SIIT_Bogdan_Muntean\\\\week14_homework\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = `Winner ${winner}`;\n    } else {\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 106,\n  columnNumber: 13\n}, this)); //\n//Fara time traveling (history)\n// function Square(props) {\n//     return (\n//         <button className=\"square\" onClick={props.onClick}>\n//             {props.value}\n//         </button>\n//     );\n// }\n// class Board extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             squares: Array(9).fill(null),\n//             xIsNext: true,\n//         };\n//     }\n//     handleClick(i) {\n//         const squares = this.state.squares.slice();\n//         if(calculateWinner(squares) || squares[i]){\n//             return;\n//         }\n//         squares[i] = this.state.xIsNext ? 'X' : 'O';\n//         this.setState({\n//             squares: squares,\n//             xIsNext: !this.state.xIsNext,\n//         });\n//     }\n//     renderSquare(i) {\n//         return <Square\n//             value={this.state.squares[i]}\n//             onClick={() => this.handleClick(i)} />;\n//     }\n//     render() {\n//         const winner = calculateWinner(this.state.squares)\n//         let status;\n//         if(winner) {\n//             status = `Winner ${winner}`;\n//         } else {\n//             status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n//         }\n//         return (\n//             <div>\n//                 <div className=\"status\">{status}</div>\n//                 <div className=\"board-row\">\n//                     {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\n//                 </div>\n//                 <div className=\"board-row\">\n//                     {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\n//                 </div>\n//                 <div className=\"board-row\">\n//                     {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// class Game extends React.Component {\n//     render() {\n//         return (\n//             <div className=\"game\">\n//                 <div className=\"game-board\">\n//                     <Board />\n//                 </div>\n//                 <div className=\"game-info\">\n//                     <div>{/* status */}</div>\n//                     <ol>{/* TODO */}</ol>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// function calculateWinner(squares) {\n//     const lines = [\n//         [0, 1, 2],\n//         [3, 4, 5],\n//         [6, 7, 8],\n//         [0, 3, 6],\n//         [1, 4, 7],\n//         [2, 5, 8],\n//         [0, 4, 8],\n//         [2, 4, 6],\n//     ];\n//     for (let i = 0; i < lines.length; i++) {\n//         const [a, b, c] = lines[i];\n//         if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//             return squares[a];\n//         }\n//     }\n//     return null;\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","calculateWinner","setState","renderSquare","render","winner","status","Game","lines","length","a","b","c","root","createRoot","document","getElementById"],"sources":["E:/DocumenteB/SIIT_Scoala_Informala_de_IT/SIIT_Bogdan_Muntean/week14_homework/my-app/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if(calculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return <Square\r\n            value={this.state.squares[i]}\r\n            onClick={() => this.handleClick(i)} />;\r\n    }\r\n\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares)\r\n        let status;\r\n        if(winner) {\r\n            status = `Winner ${winner}`;\r\n        } else {\r\n            status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n// ========================================\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<Game />);\r\n\r\n//\r\n\r\n//Fara time traveling (history)\r\n// function Square(props) {\r\n//     return (\r\n//         <button className=\"square\" onClick={props.onClick}>\r\n//             {props.value}\r\n//         </button>\r\n//     );\r\n// }\r\n\r\n// class Board extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             squares: Array(9).fill(null),\r\n//             xIsNext: true,\r\n//         };\r\n//     }\r\n\r\n//     handleClick(i) {\r\n//         const squares = this.state.squares.slice();\r\n//         if(calculateWinner(squares) || squares[i]){\r\n//             return;\r\n//         }\r\n//         squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n//         this.setState({\r\n//             squares: squares,\r\n//             xIsNext: !this.state.xIsNext,\r\n//         });\r\n//     }\r\n\r\n//     renderSquare(i) {\r\n//         return <Square\r\n//             value={this.state.squares[i]}\r\n//             onClick={() => this.handleClick(i)} />;\r\n//     }\r\n\r\n//     render() {\r\n//         const winner = calculateWinner(this.state.squares)\r\n//         let status;\r\n//         if(winner) {\r\n//             status = `Winner ${winner}`;\r\n//         } else {\r\n//             status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n//         }\r\n\r\n//         return (\r\n//             <div>\r\n//                 <div className=\"status\">{status}</div>\r\n//                 <div className=\"board-row\">\r\n//                     {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\r\n//                 </div>\r\n//                 <div className=\"board-row\">\r\n//                     {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\r\n//                 </div>\r\n//                 <div className=\"board-row\">\r\n//                     {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// class Game extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <div className=\"game\">\r\n//                 <div className=\"game-board\">\r\n//                     <Board />\r\n//                 </div>\r\n//                 <div className=\"game-info\">\r\n//                     <div>{/* status */}</div>\r\n//                     <ol>{/* TODO */}</ol>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// function calculateWinner(squares) {\r\n//     const lines = [\r\n//         [0, 1, 2],\r\n//         [3, 4, 5],\r\n//         [6, 7, 8],\r\n//         [0, 3, 6],\r\n//         [1, 4, 7],\r\n//         [2, 5, 8],\r\n//         [0, 4, 8],\r\n//         [2, 4, 6],\r\n//     ];\r\n//     for (let i = 0; i < lines.length; i++) {\r\n//         const [a, b, c] = lines[i];\r\n//         if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n//             return squares[a];\r\n//         }\r\n//     }\r\n//     return null;\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}